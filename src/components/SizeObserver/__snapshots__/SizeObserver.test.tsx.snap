// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SizeObserver /> renders at the default size on first render 1`] = `
<SizeObserver
  query={
    Object {
      "large": Object {
        "minWidth": 501,
      },
      "small": Object {
        "maxWidth": 500,
      },
    }
  }
  renderAt={
    [MockFunction] {
      "calls": Array [
        Array [
          undefined,
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": <span>
            Other
          </span>,
        },
      ],
    }
  }
>
  <div>
    <span>
      Other
    </span>
  </div>
</SizeObserver>
`;

exports[`<SizeObserver /> when its size changes renders at the corresponding size 1`] = `
<SizeObserver
  query={
    Object {
      "large": Object {
        "minWidth": 501,
      },
      "small": Object {
        "maxWidth": 500,
      },
    }
  }
  renderAt={
    [MockFunction] {
      "calls": Array [
        Array [
          undefined,
        ],
        Array [
          "large",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": <span>
            Other
          </span>,
        },
        Object {
          "isThrow": false,
          "value": <span>
            Large
          </span>,
        },
      ],
    }
  }
>
  <div>
    <span>
      Other
    </span>
  </div>
</SizeObserver>
`;

exports[`<SizeObserver /> when its size changes twice but both changes match the same query renders at the corresponding size 1`] = `
<SizeObserver
  query={
    Object {
      "large": Object {
        "minWidth": 501,
      },
      "small": Object {
        "maxWidth": 500,
      },
    }
  }
  renderAt={
    [MockFunction] {
      "calls": Array [
        Array [
          undefined,
        ],
        Array [
          "large",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": <span>
            Other
          </span>,
        },
        Object {
          "isThrow": false,
          "value": <span>
            Large
          </span>,
        },
      ],
    }
  }
>
  <div>
    <span>
      Other
    </span>
  </div>
</SizeObserver>
`;
