// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Picker /> when rendering a selected item matches its snapshot 1`] = `
<div
  className=

      {
        background-color: #f3f5f8;
        border-radius: 2px;
        border: solid 1px #dde0e6;
        color: #343a41;
        cursor: default;
        display: inline-flex;
        height: 26px;
        margin-bottom: 2px;
        margin-left: 2px;
        margin-right: 2px;
        margin-top: 2px;
        padding-bottom: 2px;
        padding-left: 4px;
        padding-right: 4px;
        padding-top: 2px;
      }
  data-is-focusable={true}
  data-selection-index={0}
  role="listitem"
>
  <CustomizedBlock
    textSize="mediumSub"
  >
    <FixedGridRow>
      <FixedGridColumn
        fixed={true}
      >
        <span>
          Cristiana Cline
        </span>
      </FixedGridColumn>
      <FixedGridColumn
        fixed={true}
      >
        <div
          aria-label="Remove this item"
          className=

              {
                cursor: pointer;
                display: inline-block;
              }
        >
          <Cancel
            block={true}
          />
        </div>
      </FixedGridColumn>
    </FixedGridRow>
  </CustomizedBlock>
</div>
`;

exports[`<Picker /> when rendering a suggestion item matches its snapshot 1`] = `
<SuggestionsListItemContent
  className=

      {
        width: 100%;
      }
  item={
    Object {
      "description": "Data Analyst",
      "id": 1,
      "name": "Cristiana Cline",
      "template": "mediaRound",
    }
  }
/>
`;

exports[`<Picker /> with additional className matches its snapshot 1`] = `
<SuggestionListBasePicker
  className=
      y-picker
      TEST_CLASSNAME
      & .ms-BasePicker-text[class*="pickerText"][class*="inputFocused"] {
        border-color: #6c98d9;
      }
      & .ms-BasePicker-text[class*="pickerText"] {
        border-color: #dde0e6;
      }
  inputProps={
    Object {
      "aria-label": "People to mention",
      "onBlur": undefined,
      "onFocus": undefined,
    }
  }
  onChange={[MockFunction]}
  onRenderItem={[Function]}
  onRenderSuggestionsItem={[Function]}
  onResolveSuggestions={[Function]}
  pickerSuggestionsProps={
    Object {
      "className": 

        & .ms-Suggestions-title {
          border-bottom-color: #edeff2;
          color: #6c98d9;
        }
        & .ms-Suggestions-container {
          border-bottom-color: #edeff2;
        },
      "noResultsFoundText": "No results found",
      "suggestionsClassName": 

        & .ms-Suggestions-item:hover {
          background-color: #f3f5f8;
        }
        & .ms-Suggestions-item[class*="suggestionsItemIsSuggested"] {
          background-color: #edeff2;
        }
        & .ms-Suggestions-item[class*="suggestionsItemIsSuggested"]:hover {
          background-color: #a8b0bd;
        },
      "suggestionsHeaderText": "People",
    }
  }
  selectedItems={Array []}
/>
`;

exports[`<Picker /> with default options matches its snapshot 1`] = `
<SuggestionListBasePicker
  className=
      y-picker
      & .ms-BasePicker-text[class*="pickerText"][class*="inputFocused"] {
        border-color: #6c98d9;
      }
      & .ms-BasePicker-text[class*="pickerText"] {
        border-color: #dde0e6;
      }
  inputProps={
    Object {
      "aria-label": "People to mention",
      "onBlur": undefined,
      "onFocus": undefined,
    }
  }
  onChange={[MockFunction]}
  onRenderItem={[Function]}
  onRenderSuggestionsItem={[Function]}
  onResolveSuggestions={[Function]}
  pickerSuggestionsProps={
    Object {
      "className": 

        & .ms-Suggestions-title {
          border-bottom-color: #edeff2;
          color: #6c98d9;
        }
        & .ms-Suggestions-container {
          border-bottom-color: #edeff2;
        },
      "noResultsFoundText": "No results found",
      "suggestionsClassName": 

        & .ms-Suggestions-item:hover {
          background-color: #f3f5f8;
        }
        & .ms-Suggestions-item[class*="suggestionsItemIsSuggested"] {
          background-color: #edeff2;
        }
        & .ms-Suggestions-item[class*="suggestionsItemIsSuggested"]:hover {
          background-color: #a8b0bd;
        },
      "suggestionsHeaderText": "People",
    }
  }
  selectedItems={Array []}
/>
`;
