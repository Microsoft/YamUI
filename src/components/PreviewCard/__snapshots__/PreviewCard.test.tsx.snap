// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PreviewCard /> when description is edible with onDescriptionChange callback matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    metadataContent={
      <CustomizedBlock
        push={0}
        textColor="metadata"
      >
        <CustomizedEditableText
          maxLength={120}
          onBeginEditing={[Function]}
          onEndEditing={[Function]}
          onUpdate={[MockFunction]}
          placeHolder="empty placeholder text"
          promptText="empty placeholder text"
          text="file description"
        />
      </CustomizedBlock>
    }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> when description is edible with onDescriptionChange callback when entering edit mode matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    metadataContent={
      <CustomizedBlock
        push={-3}
        textColor="metadata"
      >
        <CustomizedEditableText
          maxLength={120}
          onBeginEditing={[Function]}
          onEndEditing={[Function]}
          onUpdate={[MockFunction]}
          placeHolder="empty placeholder text"
          promptText="empty placeholder text"
          text="file description"
        />
      </CustomizedBlock>
    }
    size="medium"
    titleContent={
      <CustomizedBlock
        textSize="xSmall"
      >
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> when description is edible with onDescriptionChange callback when exiting edit mode matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    metadataContent={
      <CustomizedBlock
        push={0}
        textColor="metadata"
      >
        <CustomizedEditableText
          maxLength={120}
          onBeginEditing={[Function]}
          onEndEditing={[Function]}
          onUpdate={[MockFunction]}
          placeHolder="empty placeholder text"
          promptText="empty placeholder text"
          text="file description"
        />
      </CustomizedBlock>
    }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> when loading matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    metadataContent={
      <CustomizedBlock
        push={1}
        textColor="metadata"
      >
        <CustomizedSpinner
          color="metadata"
          size="xSmall"
          text="loading..."
        />
      </CustomizedBlock>
    }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with additional className matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard
      TEST_CLASSNAME

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with description matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    metadataContent="file description"
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with image matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    imageContent={
      <Image
        description="file description"
        fullWidth={true}
        shouldFadeIn={false}
        source="filename.png"
      />
    }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with loading progress matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
  <CustomizedProgressIndicator
    ariaValueText="Uploading, currently at 50%"
    className=

        {
          bottom: 0px;
          left: 0px;
          position: absolute;
          right: 0px;
        }
    percentComplete={0.5}
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with minimal options matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with onClick handler matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard
      &:hover {
        background-color: #f3f5f8;
      }
  onClick={[MockFunction]}
>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    size="medium"
    titleContent={
      <CustomizedBlock>
        <CustomizedClickable
          ariaLabel="Show file preview"
          unstyled={true}
        >
          Filename.gif
        </CustomizedClickable>
      </CustomizedBlock>
    }
  />
</CustomizedBox>
`;

exports[`<PreviewCard /> with onRemoveClick handler matches its snapshot 1`] = `
<CustomizedBox
  className=
      y-previewCard

>
  <MediaObject
    className=

        {
          padding-bottom: 2px;
        }
    size="medium"
    titleContent={
      <CustomizedBlock>
        Filename.gif
      </CustomizedBlock>
    }
  />
  <span
    className=

        {
          color: #646d7a;
          position: absolute;
          right: 2px;
          top: 4px;
        }
  >
    <CustomizedClickable
      ariaLabel="Remove this attachment"
      block={true}
      onClick={[Function]}
      unstyled={true}
    >
      <CustomizedBlock
        padding="small"
      >
        <Cancel
          block={true}
          size="12"
        />
      </CustomizedBlock>
    </CustomizedClickable>
  </span>
</CustomizedBox>
`;
