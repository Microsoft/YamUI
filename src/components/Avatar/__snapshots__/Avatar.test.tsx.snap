// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Avatar /> accessible text with badge description matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME - BADGE
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> accessible text without badge description matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with additional className matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with badge content matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={10}
    styles={[Function]}
    text="NAME"
  />
  <div
    className=

        {
          background: #ffffff;
          border-radius: 50%;
          border: solid 2px #ffffff;
          bottom: -2px;
          color: #386cbb;
          height: 16px;
          position: absolute;
          right: -2px;
          width: 16px;
        }
        & > .y-icon {
          top: 0px;
        }
  >
    <CustomizedText>
      badge
    </CustomizedText>
  </div>
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with image url matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with imageShouldFadeIn matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={true}
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with size matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={14}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with soft border type matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    imageUrl="test.jpg"
    size={12}
    styles={[Function]}
    text="NAME"
  />
  <ScreenreaderText>
    NAME
  </ScreenreaderText>
</div>
`;

exports[`<Avatar /> with too many characters matches its snapshot 1`] = `
<div
  className=
      y-avatar
      {
        position: relative;
      }
>
  <StyledPersonaCoinBase
    hidePersonaDetails={true}
    imageShouldFadeIn={false}
    size={12}
    styles={[Function]}
    text="First Last"
  />
  <ScreenreaderText>
    First Last
  </ScreenreaderText>
</div>
`;
